---
# tasks file for boostrapping/control-plane

- name: Download and Install the Kubernetes Controller Binaries
  get_url:
    url: "{{ item }}"
    dest: "{{ KUBERNETES_BINARY_PATH }}"
    mode: '0700'
  with_items: 
    - "https://storage.googleapis.com/kubernetes-release/release/{{ KUBERNETES_VERSION }}/bin/linux/amd64/kube-apiserver"
    - "https://storage.googleapis.com/kubernetes-release/release/{{ KUBERNETES_VERSION }}/bin/linux/amd64/kube-controller-manager"
    - "https://storage.googleapis.com/kubernetes-release/release/{{ KUBERNETES_VERSION }}/bin/linux/amd64/kube-scheduler"

- name: Configure the Kubernetes API Server (1/2)
  file:
    path: "{{ item }}"
    state: directory
    mode: '0700'
  with_items: 
    - "/var/lib/kubernetes" 

- name: Configure the Kubernetes API Server (2/2)
  copy: 
    src: "{{ KUBERNETES_DIRECTORY }}/{{ item }}"
    dest: "/var/lib/kubernetes"
    mode: 0600
    remote_src: yes
  with_items:
    - pki/ca/ca.pem 
    - pki/ca/ca-key.pem
    - pki/api/kubernetes-key.pem
    - pki/api/kubernetes.pem  
    - pki/service-account/service-account-key.pem 
    - pki/service-account/service-account.pem
    - secret/encryption-config.yaml  
    - kubeconfig/kube-controller-manager.kubeconfig
    - kubeconfig/kube-scheduler.kubeconfig
 
- name: Create the kube-apiserver.service systemd unit file
  template: 
    src: "kube-apiserver.service.j2"
    dest: "/etc/systemd/system/kube-apiserver.service"
    mode: 0700

- name: Create the kube-controller-manager.service systemd unit file
  template: 
    src: "kube-controller-manager.service.j2"
    dest: "/etc/systemd/system/kube-controller-manager.service"
    mode: 0700

- name: Create the kube-scheduler.yaml configuration file
  copy: 
    src: "kube-scheduler.yaml"
    dest: "/etc/kubernetes/config/kube-scheduler.yaml"
    mode: 0600  

- name: Create the kube-scheduler.service systemd unit file
  copy: 
    src: "kube-scheduler.service"
    dest: "/etc/systemd/system/kube-scheduler.service"
    mode: 0600  

- name: Start the etcd Server
  systemd:
    name: "{{ item }}" 
    daemon_reload: yes
    state: started
    enabled: yes
  with_items:
    - kube-apiserver 
    - kube-controller-manager 
    - kube-scheduler    

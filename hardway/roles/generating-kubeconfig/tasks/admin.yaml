---
# 1. The kubelet Kubernetes Configuration File
- name: Generate a kubeconfig file for the admin service (1/2)
#  shell: >
  copy:
    dest: "{{ KUBERNETES_DIRECTORY }}/genconfig-admin.sh"
    content: |
      #/usr/bin/env bash

      {{ KUBERNETES_BINARY_PATH }}/kubectl config set-cluster {{ KUBERNETS_CLUSTER_NAME }} \
      --certificate-authority={{ KUBERNETES_DIRECTORY }}/pki/ca/ca.pem \
      --embed-certs=true \
      --server=https://{{ KUBERNETES_PUBLIC_ADDRESS }}:6443 \
      --kubeconfig={{ KUBERNETES_DIRECTORY }}/kubeconfig/admin.kubeconfig \
        
      {{ KUBERNETES_BINARY_PATH }}/kubectl config set-credentials admin \
      --client-certificate={{ KUBERNETES_DIRECTORY }}/pki/admin/admin.pem \
      --client-key={{ KUBERNETES_DIRECTORY }}/pki/admin/admin-key.pem \
      --embed-certs=true \
      --kubeconfig={{ KUBERNETES_DIRECTORY }}/kubeconfig/admin.kubeconfig
        
      {{ KUBERNETES_BINARY_PATH }}/kubectl config set-context default \
      --cluster={{ KUBERNETS_CLUSTER_NAME }} \
      --user=admin \
      --kubeconfig={{ KUBERNETES_DIRECTORY }}/kubeconfig/admin.kubeconfig \
        
      {{ KUBERNETES_BINARY_PATH }}/kubectl config use-context default --kubeconfig={{ KUBERNETES_DIRECTORY }}/kubeconfig/admin.kubeconfig 
    mode: 0700 

- name: Generate a kubeconfig file for the admin service (2/2)
  shell: "{{ KUBERNETES_DIRECTORY }}/genconfig-admin.sh"
  register: "admin_result" 

- debug:
    msg: 
      - "admin result :  {{ admin_result }} " 
    verbosity: 2 